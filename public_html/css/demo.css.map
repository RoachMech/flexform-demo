{"version":3,"sources":["demo.scss","../../../node_modules/flexform-sass/src/components/generated/_button-group-css.scss","../../../node_modules/flexform-sass/src/components/_button-group.scss","../../../node_modules/flexform-sass/src/components/generated/_group-css.scss","../../../node_modules/flexform-sass/src/components/_group.scss","../../../node_modules/flexform-sass/src/config/_config.scss","../../../node_modules/flexform-sass/src/components/generated/_input-css.scss","../../../node_modules/flexform-sass/src/components/_input.scss","../../../node_modules/flexform-sass/src/components/generated/_textarea-css.scss","../../../node_modules/flexform-sass/src/components/_textarea.scss"],"names":[],"mappings":"AAAA;EACE,uBAAuB,EAKxB;EAND;IAII,uBAAuB,EACxB;;AAEH;EACE,oBAAoB;EAEpB,wBAAwB,EAEzB;;ACPC;ECJA,qBAAc;EAAd,cAAc;EACd,gBAAgB;EAChB,mBAH8C,EDO7C;;AEFD;ECFA,qBAAc;EAAd,cAAc;EACd,gBAAgB;EAChB,mBCL2C,EFO1C;;AAED;ECCA,eAAe;EACf,oBAAe;EAAf,eAAe;EACf,mBCT0C,EFQzC;;AAED;ECUA,oBAAe;EAAf,eAAe;EACf,gBCnBuC,EFgBtC;EARD;IAKM,iBEdwC,EFezC;EANL;IAKM,gBEdqD,EFetD;;AAIL;ECSA,oBAAe;EAAf,eAAe;EACf,sBAAmB,EDRlB;;AAED;ECWA,oBAAe;EAAf,eAAe;EACf,sBAAoB,EDVnB;;AGxBD;ECHA,yBAAiB;EAAjB,sBAAiB;EAAjB,iBAAiB;EACjB,wBFOuB;EENvB,wBFOuB;EENvB,iBFOgB;EENhB,eAAe;EACf,sBAAsB;EACtB,qBAAqB;EACrB,mBAAmB;EACnB,aFGY;EEFZ,cAAc;EACd,gBFEe;EEDf,YAAY,EDNX;EAFD;ICWE,uBFAsB;IECtB,6CFAkC,EECnC;;ACbD;EDHA,yBAAiB;EAAjB,sBAAiB;EAAjB,iBAAiB;EACjB,wBFOuB;EENvB,wBFOuB;EENvB,iBFOgB;EENhB,eAAe;EACf,sBAAsB;EACtB,qBAAqB;EACrB,mBAAmB;EACnB,aFGY;EEFZ,cAAc;EACd,gBFEe;EEDf,YAAY;EEPZ,aTiBwC;EShBxC,mBJA6C,EGA5C;EAFD;IDWE,uBFAsB;IECtB,6CFAkC,EECnC","file":"demo.css","sourcesContent":["* {\n  box-sizing: border-box;\n  &:before,\n  &:after {\n    box-sizing: border-box;\n  }\n}\nbody {\n  background: oldlace;\n\n  font-family: sans-serif;\n\n}\n\n@import '../../../node_modules/flexform-sass/src/flexform';\n\n//@include set-flexform-group-margin(0 0 rhythm() 0);\n//@include set-flexform-inline-breakpoint($screen-m);\n//@include set-flexform-inline-label-width(rhythm(16));\n//@include set-flexform-label-padding(rhythm() 0);\n//@include set-flexform-max-field-size(rhythm(60));\n//@include set-flexform-field-sizes((medium: rhythm(30), small: rhythm(12)));\n@include set-flexform-css-prefix(form);\n@include set-flexform-textarea-height(5rem);\n//@include set-flexform-textarea-padding(rhythm(1.1) rhythm());\n//\n//\n//$input-properties: (\n//        background-color: $color__white,\n//        border: 1px solid $form-control__border-color,\n//        border-radius: $border-radius,\n//        height: $form-control__height,\n//        padding: 0 rhythm(),\n//        focus: (\n//                border: 1px solid darken($form-control__border-color, 10),\n//                box-shadow: 0 0 5px rgba($color__primary, .4)\n//        )\n//);\n\n//@include set-flexform-input-properties($input-properties);\n\n@import \"../../../node_modules/flexform-sass/src/components/generated\";","/// Generate flexform-button-group selectors\n@mixin flexform-generate-button-group-css() {\n\n  $prefix: get-flexform-css-prefix();\n\n  .#{$prefix}-button-group {\n    @include flexform-button-group;\n  }\n\n}\n\n@include flexform-generate-button-group-css;","@mixin flexform-button-group($margin: 2rem 0 0 0) {\n  display: flex;\n  flex-wrap: wrap;\n  margin: $margin;\n\n  @if flexform-can-be-inline() {\n    @media (min-width: get-flexform-inline-breakpoint()) {\n      margin-left: get-flexform-inline-label-width();\n    }\n  }\n}","/// Generate flexform-group selectors\n@mixin flexform-generate-group-css() {\n\n  $prefix: get-flexform-css-prefix();\n\n  .#{$prefix}-group {\n    @include flexform-group;\n  }\n\n  .#{$prefix}-group__label {\n    @include flexform-label;\n  }\n\n  .#{$prefix}-group__field {\n    @include flexform-field-container;\n\n    @each $name, $max-size in get-flexform-field-sizes() {\n      &--#{$name} {\n        max-width: $max-size;\n      }\n    }\n  }\n\n  .#{$prefix}-group__addon {\n    @include flexform-addon;\n  }\n\n  .#{$prefix}-group__text {\n    @include flexform-text;\n  }\n\n}\n\n@include flexform-generate-group-css;","/// Create the flexform-group. This is the container for a single element's label, field, addon and text\n/// @param {number|list} $margin - Margin of the group\n@mixin flexform-group($margin: get-flexform-group-margin()) {\n  display: flex;\n  flex-wrap: wrap;\n  margin: $margin;\n}\n\n/// Create the label for a single element\n@mixin flexform-label($padding: get-flexform-label-padding()) {\n  display: block;\n  flex: 1 1 100%;\n  padding: $padding;\n\n  @if flexform-can-be-inline() {\n    @media (min-width: get-flexform-inline-breakpoint()) {\n      flex: 0 0 get-flexform-inline-label-width();\n    }\n  }\n}\n\n/// Create the field container\n@mixin flexform-field-container($max-field-size: get-flexform-max-field-size()) {\n  flex: 1 1 auto;\n  max-width: $max-field-size;\n}\n\n/// @example scss - Create an optional addon\n///   myForm__addon {\n///     @include flexform-addon;\n///   }\n@mixin flexform-addon() {\n  flex: 0 0 auto;\n  margin-left: rhythm();\n}\n\n/// Create the text container\n@mixin flexform-text() {\n  flex: 0 0 100%;\n  margin: rhythm(.5) 0;\n\n  @if flexform-can-be-inline() {\n    @media (min-width: get-flexform-inline-breakpoint()) {\n      padding-left: get-flexform-inline-label-width();\n    }\n  }\n}","@include set-flexform-group-margin(0 0 1rem 0);\n@include set-flexform-css-prefix(flexform);\n@include set-flexform-inline-label-width(14rem);\n@include set-flexform-label-padding(.75rem 0);\n@include set-flexform-field-sizes((medium: 22rem, small: 8rem));\n@include set-flexform-max-field-size(100%);\n@include set-flexform-button-group-margin(2rem 0 0 0);\n@include set-flexform-textarea-padding(.75rem 0);\n\n$input-properties: (\n  background-color: white,\n  border: 1px solid black,\n  border-radius: 0,\n  height: 3rem,\n  padding: 0 1rem,\n  focus: (\n    border: 1px solid blue,\n    box-shadow: 0 0 5px rgba(lightblue, .9)\n  )\n);\n@include set-flexform-input-properties($input-properties);\n","/// Generate flexform-input selectors\n@mixin flexform-generate-input-css() {\n\n  $prefix: get-flexform-css-prefix();\n\n  .#{$prefix}-input {\n    @include flexform-input-base;\n  }\n\n}\n\n@include flexform-generate-input-css;","/// Create a text-based input\n@mixin flexform-input-base() {\n  appearance: none;\n  background-color: get-flexform-input-property(background-color);\n  border: get-flexform-input-property(border);\n  border-radius: get-flexform-input-property(border-radius);\n  color: inherit;\n  display: inline-block;\n  font-family: inherit;\n  font-size: inherit;\n  height: get-flexform-input-property(height);\n  outline: none;\n  padding: get-flexform-input-property(padding);\n  width: 100%;\n\n  &:focus {\n    border: map-get(get-flexform-input-property(focus), border);\n    box-shadow: map-get(get-flexform-input-property(focus), box-shadow);\n  }\n}","/// Generate flexform-textarea selectors\n@mixin flexform-generate-textarea-css() {\n\n  $prefix: get-flexform-css-prefix();\n\n  .#{$prefix}-textarea {\n    @include flexform-textarea;\n  }\n\n}\n\n@include flexform-generate-textarea-css;","/// Create a textarea\n/// @param {number} $height\n/// @param {number|list} $padding\n@mixin flexform-textarea($height: get-flexform-textarea-height(), $padding: get-flexform-textarea-padding()) {\n  @include flexform-input-base;\n\n  height: $height;\n  padding: $padding;\n}"]}